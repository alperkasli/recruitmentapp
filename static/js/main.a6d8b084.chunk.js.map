{"version":3,"sources":["media/mephoto.png","media/person.png","components/Navbar.js","components/FormItems.js","actions/Filteractions.js","components/Modal.js","components/AddCandidate.js","actions/Candidateactions.js","components/Home.js","App.js","serviceWorker.js","reducers/candidatesReducer.js","reducers/filterReducer.js","reducers/index.js","index.js"],"names":["module","exports","withRouter","className","to","availabilityOptions","value","label","locationOptions","id","positionOptions","experienceOptions","connect","state","filters","dispatch","setPositionFilter","position","type","setLocationFilter","location","setExperienceFilter","experience","setAvailabilityFilter","availability","resetFilters","props","handleAvailability","e","target","handlePosition","handleLocation","handleExperience","map","item","index","key","checked","onChange","onClick","Component","AddCandidate","name","photo","selectedOption","handleChange","setState","handleLoadLocalFile","event","preventDefault","file","files","localImageUrl","window","URL","createObjectURL","handleSubmit","addNewCandidate","Math","random","console","log","selectedPositionOption","selectedLocationOption","this","onSubmit","src","alt","accept","required","placeholder","htmlFor","options","addCandidate","Home","handleName","setNameFilter","modal","modalHandler","candidates","afterFiltering","data","filter","candidate","nameMatch","toLowerCase","includes","positionMatch","locationMatch","experienceMatch","availabilityMatch","filteredList","candidateList","length","deleteCandidate","App","exact","path","component","Boolean","hostname","match","initState","Myimg","examplePhoto","candidatesReducer","action","newCandidates","filtersReducer","allReducers","combineReducers","rootReducer","filterReducer","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a6d8b084.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mephoto.1275c866.png\";","module.exports = __webpack_public_path__ + \"static/media/person.906ed4b6.png\";","import React from 'react'\r\nimport { Link, NavLink, withRouter } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"nav-wrapper blue darken-2\">\r\n            <div className=\"container\">\r\n                <span className=\"brand-logo left\" ><Link to='/recruitmentapp'>Recruitment App</Link></span>\r\n\r\n                <ul className=\"right\">\r\n                    <li><Link to=\"/recruitmentapp\">Home</Link></li>\r\n                    <li><NavLink to=\"/recruitmentapp/new-candidate\">NEW CANDIDATE</NavLink></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default withRouter(Navbar);","import React from 'react'\r\nimport {setLocationFilter, setPositionFilter, setAvailabilityFilter, resetFilters, setExperienceFilter} from '../actions/Filteractions'\r\nimport {connect} from 'react-redux'\r\n\r\nconst availabilityOptions = [\r\n    {value: 'all', label: 'all'},\r\n    {value: 'immediately', label: 'immediately'},\r\n    {value: '1 week', label: '1 week'},\r\n    {value: '2 week', label: '2 week'},\r\n    {value: '3 week', label: '3 week'},\r\n    {value: '4 week', label: '4 week'},\r\n    {value: '6 week', label: '6 week'}\r\n];\r\n\r\nconst locationOptions = [\r\n    {value: 'all', label: 'all', id:'location'},\r\n    {value: 'Dubai', label: 'Dubai', id:'location'},\r\n    {value: 'Abu Dhabi', label: 'Abu Dhabi', id:'location'},\r\n    {value: 'Ras Al Khaimah', label: 'Ras Al Khaimah', id:'location'},\r\n    {value: 'Sharjah', label: 'Sharjah', id:'location'}\r\n];\r\n\r\nconst positionOptions = [\r\n    {value: 'all', label: 'all', id:'position'},\r\n    {value: 'Frontend Developer', label: 'Frontend Developer', id:'position'},\r\n    {value: 'Backend Developer', label: 'Backend Developer',id:'position'},\r\n    {value: 'Fullstack Developer', label: 'Fullstack Developer', id:'position'},\r\n    {value: 'Teamlead Developer', label: 'Teamlead Developer', id:'position'},\r\n    {value: 'QA Developer', label: 'QA Developer', id:'position'}\r\n];\r\n\r\nconst experienceOptions = [\r\n    {value: 'all', label: 'all'},\r\n    {value: '1 year', label: '1 year'},\r\n    {value: '2 year', label: '2 year'},\r\n    {value: '3 year', label: '3 year'},\r\n    {value: '4 year', label: '4 year'},\r\n    {value: '5 year', label: '5 year'},\r\n    {value: '6 year', label: '6 year'},\r\n    {value: '7+ year', label: '7+ year'},\r\n];\r\n\r\nconst FormItems = (props) => {\r\n    // console.log(props)\r\n    const {setPositionFilter, setAvailabilityFilter, setLocationFilter, setExperienceFilter} = props;\r\n\r\n    const handleAvailability = (e) => {\r\n        setAvailabilityFilter(e.target.value);\r\n    }\r\n    const handlePosition = (e) => {\r\n        setPositionFilter(e.target.value);\r\n    }\r\n    const handleLocation = (e) => {\r\n        setLocationFilter(e.target.value);\r\n    }\r\n    const handleExperience = (e) => {\r\n        setExperienceFilter(e.target.value);\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"left-menu\">\r\n            <h4 className=\"title\">Filter</h4>\r\n\r\n            {/* <input \r\n                placeholder=\"Search Candidate..\" \r\n                className=\"search-bar\" \r\n                type=\"text\"\r\n                onChange={handleName}\r\n             /> */}\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <h6 className=\"grey-text\">Experience</h6>\r\n                        {\r\n                            experienceOptions.map((item, index) => (\r\n                                <div key={index}>\r\n                                    <label>\r\n                                        <input\r\n                                            type=\"radio\" \r\n                                            id=\"experience\"\r\n                                            value={item.value}\r\n                                            checked={props.filters.experience === item.value}\r\n                                            onChange={handleExperience}\r\n                                        />\r\n                                        <span>{item.value}</span>\r\n                                    </label>\r\n                                </div> \r\n                            ))\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"col s12 m6\">\r\n                        <h6 className=\"grey-text\">Position</h6>\r\n                        {\r\n                            positionOptions.map((item, index) => (\r\n                                <div key={index}>\r\n                                    <label>\r\n                                        <input\r\n                                            type=\"radio\" \r\n                                            id=\"position\"\r\n                                            value={item.value}\r\n                                            checked={props.filters.position === item.value}\r\n                                            onChange={handlePosition}\r\n                                        />\r\n                                        <span>{item.value}</span>\r\n                                    </label>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <h6 className=\"grey-text\">Location</h6>\r\n                        {\r\n                            locationOptions.map((item, index) => (\r\n                                <div key={index}>\r\n                                    <label>\r\n                                        <input\r\n                                            type=\"radio\" \r\n                                            id=\"location\"\r\n                                            value={item.value}\r\n                                            checked={props.filters.location === item.value}\r\n                                            onChange={handleLocation}\r\n                                        />\r\n                                        <span>{item.value}</span>\r\n                                    </label>\r\n                                </div> \r\n                            ))\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"col s12 m6\">\r\n                        <h6 className=\"grey-text\">Availability</h6>\r\n                        {\r\n                            availabilityOptions.map((item, index) => (\r\n                                <div key={index}>\r\n                                    <label>\r\n                                        <input\r\n                                            type=\"radio\" \r\n                                            id=\"availability\"\r\n                                            value={item.value}\r\n                                            checked={props.filters.availability === item.value}\r\n                                            onChange={handleAvailability}\r\n                                        />\r\n                                        <span>{item.value}</span>\r\n                                    </label>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            <br />\r\n            <button className=\"waves-effect waves-light btn blue\" onClick={() => props.resetFilters()}>Clear Filters</button>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setPositionFilter: (position) => (\r\n            dispatch(setPositionFilter(position))\r\n        ),\r\n        setLocationFilter: (location) => (\r\n            dispatch(setLocationFilter(location))\r\n        ),\r\n        setExperienceFilter: (experience) => (\r\n            dispatch(setExperienceFilter(experience))\r\n        ),\r\n        setAvailabilityFilter: (availability) => (\r\n            dispatch(setAvailabilityFilter(availability))\r\n        ),\r\n        resetFilters: () => {\r\n            dispatch(resetFilters())\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        filters: state.filters\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormItems);","export const setNameFilter = (name) => {\r\n    return {\r\n        type: 'NAME',\r\n        name\r\n    }\r\n}\r\nexport const setPositionFilter = (position) => {\r\n    return {\r\n        type: 'POSITION',\r\n        position\r\n    }\r\n}\r\nexport const setLocationFilter = (location) => {\r\n    return {\r\n        type: 'LOCATION',\r\n        location\r\n    }\r\n}\r\nexport const setExperienceFilter = (experience) => {\r\n    return {\r\n        type: 'EXPERIENCE',\r\n        experience\r\n    }\r\n}\r\nexport const setAvailabilityFilter = (availability) => {\r\n    return {\r\n        type: 'AVAILABILITY',\r\n        availability\r\n    }\r\n}\r\nexport const resetFilters = () => {\r\n    return {\r\n        type: 'RESET'\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nclass Modal extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.closeModal = false;\r\n        this.modalClasses = 'mymodal hide'\r\n    }\r\n    handleModalView = () => {\r\n        if(this.props.isModalShow){\r\n            this.modalClasses = \"mymodal show\"\r\n            document.body.style.overflow = \"hidden\";\r\n        }\r\n        else{\r\n            this.modalClasses =\"mymodal hide\";        \r\n            document.body.style.overflow = \"unset\";\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        this.handleModalView();\r\n    return (\r\n        <div className={this.modalClasses}>\r\n            <span className=\"close-button\" onClick={this.props.modalHandler}>    \r\n            </span>\r\n            {this.props.children}\r\n        </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react'\r\nimport { addCandidate } from '../actions/Candidateactions'\r\nimport {connect} from 'react-redux'\r\nimport Select from 'react-select';\r\n\r\n\r\nconst availabilityOptions = [\r\n    {value: 'immediately', label: 'immediately'},\r\n    {value: '1 week', label: '1 week'},\r\n    {value: '2 week', label: '2 week'},\r\n    {value: '3 week', label: '3 week'},\r\n    {value: '4 week', label: '4 week'},\r\n    {value: '6 week', label: '6 week'}\r\n];\r\n\r\nconst locationOptions = [\r\n    {value: 'Dubai', label: 'Dubai', id:'location'},\r\n    {value: 'Abu Dhabi', label: 'Abu Dhabi', id:'location'},\r\n    {value: 'Ras Al Khaimah', label: 'Ras Al Khaimah', id:'location'},\r\n    {value: 'Sharjah', label: 'Sharjah', id:'location'}\r\n];\r\n\r\nconst positionOptions = [\r\n    {value: 'Frontend Developer', label: 'Frontend Developer', id:'position'},\r\n    {value: 'Backend Developer', label: 'Backend Developer',id:'position'},\r\n    {value: 'Fullstack Developer', label: 'Fullstack Developer', id:'position'},\r\n    {value: 'Teamlead Developer', label: 'Teamlead Developer', id:'position'},\r\n    {value: 'QA Developer', label: 'QA Developer', id:'position'}\r\n];\r\n\r\nconst experienceOptions = [\r\n    {value: '1 year', label: '1 year'},\r\n    {value: '2 year', label: '2 year'},\r\n    {value: '3 year', label: '3 year'},\r\n    {value: '4 year', label: '4 year'},\r\n    {value: '5 year', label: '5 year'},\r\n    {value: '6 year', label: '6 year'},\r\n    {value: '7+ year', label: '7+ year'},\r\n];\r\n\r\n\r\nclass AddCandidate extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        position: '',\r\n        location: '',\r\n        availability: '',\r\n        experience: '',\r\n        photo: '',\r\n        selectedOption: null\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleLoadLocalFile = (event) => {\r\n        event.preventDefault();\r\n        const file = event.target.files[0];\r\n        const localImageUrl = window.URL.createObjectURL(file);\r\n        // this.props.onFileLoaded(localImageUrl);\r\n        this.setState({\r\n            photo: localImageUrl\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let {name, position, location, experience, availability, photo} = this.state;\r\n        \r\n        this.props.addNewCandidate(\r\n            Math.random(),\r\n            name,\r\n            position,\r\n            location,\r\n            experience,\r\n            availability,\r\n            photo\r\n        );\r\n        this.setState({\r\n            name: '',\r\n            position: '',\r\n            location: '',\r\n            experience: '',\r\n            availability: '',\r\n            photo: ''\r\n        });\r\n    }\r\n\r\n    handlePosition = (selectedOption) => {\r\n        console.log(selectedOption)\r\n        this.setState({\r\n            selectedPositionOption: selectedOption,\r\n            [selectedOption.id]: selectedOption.value\r\n         });\r\n    };\r\n    handleLocation = (selectedOption) => {\r\n        console.log(selectedOption)\r\n        this.setState({\r\n            selectedLocationOption: selectedOption,\r\n            [selectedOption.id]: selectedOption.value\r\n         });\r\n    };\r\n\r\n    render() {\r\n        console.log(this.state);\r\n\r\n\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit} className=\"container\">\r\n                    <br />\r\n                    \r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\"col s4 m3\">\r\n                            {this.state.photo ? \r\n                            (<img className=\"candidatephoto\" src={this.state.photo} alt=\"candidate\" />):(\r\n                                <div className=\"candidatephoto grey lighten-2 center grey-text\">\r\n                                    photo\r\n                                </div>\r\n                            )\r\n                            }\r\n                        </div>\r\n                        <div className=\"col s8 m9\">\r\n                            <div className = \"file-field input-field\">\r\n                                <div className = \"btn\">\r\n                                    <span>Browse</span>\r\n                                    <input \r\n                                        type = \"file\"\r\n                                        accept=\".jpg, .jpeg, .png\"\r\n                                        onChange={this.handleLoadLocalFile}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                                \r\n                                <div className = \"file-path-wrapper\">\r\n                                    <input className =\"file-path validate\" type = \"text\"\r\n                                        placeholder = \"Upload file\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"name\">Full name</label>\r\n                        <input id=\"name\" type=\"text\" onChange={this.handleChange} value={this.state.name} required />\r\n                    </div>\r\n\r\n                    {/* position dropdown */}\r\n                    <div className=\"input-field\">\r\n                        <h6 className=\"grey-text\" >Select Position</h6>\r\n                        <Select\r\n                            value={this.state.selectedPositionOption}\r\n                            options={positionOptions}\r\n                            onChange={this.handlePosition}\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    {/* location dropdown */}\r\n                    <div className=\"input-field\">\r\n                        <h6 className=\"grey-text\" >Select Location</h6>\r\n                        <Select\r\n                            value={this.state.selectedLocationOption}\r\n                            options={locationOptions}\r\n                            onChange={this.handleLocation}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\"col s12 m6\">\r\n                            <h6 className=\"grey-text\">Experience</h6>\r\n                            {\r\n                                experienceOptions.map((item, index) => (\r\n                                    <div key={index}>\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"radio\" \r\n                                                id=\"experience\"\r\n                                                value={item.value}\r\n                                                checked={this.state.experience === item.value}\r\n                                                onChange={this.handleChange}\r\n                                                required\r\n                                            />\r\n                                            <span>{item.value}</span>\r\n                                        </label>\r\n                                    </div> \r\n                                ))\r\n                            }\r\n                        </div>\r\n\r\n                        <div className=\"col s12 m6\">\r\n                            <h6 className=\"grey-text\">Availability</h6>\r\n                            {\r\n                                availabilityOptions.map((item, index) => (\r\n                                    <div key={index}>\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"radio\" \r\n                                                id=\"availability\"\r\n                                                value={item.value}\r\n                                                checked={this.state.availability === item.value}\r\n                                                onChange={this.handleChange}\r\n                                                required\r\n                                            />\r\n                                            <span>{item.value}</span>\r\n                                        </label>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                                       \r\n                    <div className=\"input-field\">\r\n                        <button type=\"submit\" className=\"waves-effect waves-light btn blue\">Add candidate</button>\r\n                    </div>\r\n\r\n\r\n                </form>          \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewCandidate: (id, name, position, location, experience, availability, photo) => (\r\n            dispatch(addCandidate(id, name, position, location, experience, availability, photo))\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddCandidate);","export const deleteCandidate = (id) => {\r\n    return {\r\n        type: 'DELETE_CANDIDATE',\r\n        id\r\n    }\r\n}\r\n\r\nexport const addCandidate = (id, name, position, location, experience, availability, photo) => {\r\n    return {\r\n        type: 'ADD_CANDIDATE',\r\n        id,\r\n        name,\r\n        position,\r\n        location,\r\n        experience,\r\n        availability,\r\n        photo\r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport FormItems from './FormItems';\r\nimport {deleteCandidate} from '../actions/Candidateactions'\r\nimport {setNameFilter} from '../actions/Filteractions'\r\nimport Modal from './Modal';\r\nimport AddCandidate from './AddCandidate';\r\n\r\nclass Home extends Component {\r\n\r\n    handleName = (e) => {\r\n        this.props.setNameFilter(e.target.value);\r\n    }\r\n    state = {\r\n        modal: false\r\n    }\r\n\r\n    modalHandler = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        })\r\n    }\r\n   \r\n    render(){\r\n        const { candidates, filters } = this.props;  //state passed through props\r\n        \r\n        const {name, position, location, experience, availability} = filters;\r\n\r\n        const filteredList = (data, name, position, location, experience, availability) => {\r\n            return data.filter(candidate => {\r\n                const nameMatch = candidate.name.toLowerCase().includes(name.toLowerCase()) || name === '';\r\n                const positionMatch = candidate.position === position || position === 'all';\r\n                const locationMatch = candidate.location === location || location === 'all';\r\n                const experienceMatch = candidate.experience === experience || experience === 'all';\r\n                const availabilityMatch = candidate.availability === availability || availability === 'all';\r\n\r\n                return nameMatch && positionMatch && locationMatch && availabilityMatch && experienceMatch;\r\n            })\r\n        }\r\n        let afterFiltering = filteredList(candidates, name, position, location, experience, availability);\r\n\r\n\r\n        const candidateList = afterFiltering.length ? (\r\n            afterFiltering.map(candidate => (\r\n                <div className=\"card horizontal\" key={candidate.id} >\r\n                    <div className=\"card-image valign-wrapper\">\r\n                        <img src={candidate.photo} alt=\"candidate\" />\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                            <h4>{candidate.name}</h4>\r\n                            <h6>Position: {candidate.position} ({candidate.experience}) </h6>\r\n                            <h6>Location: {candidate.location}</h6>\r\n                            <h6>Availability: {candidate.availability}</h6>\r\n                    </div>\r\n                        <span className=\"delete-button\">\r\n                            <button className=\"btn waves-effect waves-light red\" onClick={() => this.props.deleteCandidate(candidate.id)}>delete</button>\r\n                        </span>\r\n                </div>\r\n                ))\r\n        ):  (\r\n                <p>There is no candidate left.</p>\r\n            );\r\n\r\n        \r\n\r\n        return (\r\n            <div className=\"container section\">\r\n\r\n              {/* <Modal isModalShow={this.state.modal} modalHandler={this.modalHandler} >\r\n                  <div className=\"white\">\r\n                    <AddCandidate />\r\n                  </div>\r\n              </Modal> */}\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m7\">\r\n                        {/* <button className=\"waves-effect waves-light btn blue\" onClick={this.modalHandler}>ADD</button> */}\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"search\">Search Candidate..</label>\r\n                            <input \r\n                                id=\"search\"\r\n                                className=\"search-bar\" \r\n                                type=\"text\"\r\n                                onChange={this.handleName}\r\n                            />\r\n                        </div>\r\n                        {candidateList} \r\n                    </div>\r\n                    <div className=\"col s12 m5\">\r\n                        <FormItems />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        candidates: state.candidates.candidates,\r\n        filters: state.filters\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setNameFilter: (name) => (\r\n            dispatch(setNameFilter(name))\r\n        ),\r\n        deleteCandidate: (id) => dispatch(deleteCandidate(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home'\nimport AddCandidate from './components/AddCandidate'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/recruitmentapp\" component={Home} />\n          <Route exact path=\"/recruitmentapp/new-candidate\" component={AddCandidate} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import Myimg from '../media/mephoto.png'\r\nimport examplePhoto from '../media/person.png'\r\n\r\nconst initState = {\r\n    candidates: [\r\n        {id: '11', name: 'Mucahit Alper Kasli', position: 'Frontend Developer', location: 'Dubai', experience: '2 year', availability: '1 week', photo: Myimg},\r\n        {id: '22', name: 'David Gate', position: 'Backend Developer', location: 'Sharjah',experience: '2 year', availability: '1 week', photo: examplePhoto}\r\n    ]\r\n}\r\n\r\nconst candidatesReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'ADD_CANDIDATE':\r\n            return {\r\n                candidates: [...state.candidates,\r\n                {\r\n                    id: action.id,\r\n                    name: action.name,\r\n                    position: action.position,\r\n                    location: action.location,\r\n                    experience: action.experience,\r\n                    availability: action.availability,\r\n                    photo: action.photo\r\n                }]\r\n            }\r\n        case 'DELETE_CANDIDATE':\r\n            let newCandidates = state.candidates.filter(candidate => {\r\n                return candidate.id !== action.id\r\n            });\r\n            return {\r\n                ...state,\r\n                candidates: newCandidates\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default candidatesReducer;","const initState = {\r\n    name: '',\r\n    position: 'all',\r\n    location: 'all',\r\n    experience: 'all',\r\n    availability: 'all'\r\n}\r\n\r\nconst filtersReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'NAME':\r\n            return {\r\n                ...state,\r\n                name: action.name\r\n            };\r\n        case 'POSITION':\r\n            return {\r\n                ...state,\r\n                position: action.position\r\n            };\r\n        case 'LOCATION':\r\n            return {\r\n                ...state,\r\n                location: action.location\r\n            };\r\n        case 'EXPERIENCE':\r\n            return {\r\n                ...state,\r\n                experience: action.experience\r\n            };\r\n        case 'AVAILABILITY':\r\n            return {\r\n                ...state,\r\n                availability: action.availability\r\n            };\r\n        case 'RESET':\r\n            return {\r\n                ...state,\r\n                name: '',\r\n                position: 'all',\r\n                location: 'all',\r\n                experience: 'all',\r\n                availability: 'all'\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default filtersReducer;","import rootReducer from './candidatesReducer'\r\nimport filterReducer from './filterReducer'\r\nimport {combineReducers} from 'redux'\r\n\r\nconst allReducers = combineReducers({\r\n    candidates: rootReducer,\r\n    filters: filterReducer\r\n});\r\n\r\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'\nimport {Provider} from 'react-redux'\nimport allReducers from './reducers'\n\nconst store = createStore(allReducers);\n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}