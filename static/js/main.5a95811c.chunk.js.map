{"version":3,"sources":["media/mephoto.png","media/person.png","components/Navbar.js","components/FormItems.js","actions/Filteractions.js","components/Home.js","actions/Candidateactions.js","components/AddCandidate.js","App.js","serviceWorker.js","reducers/candidatesReducer.js","reducers/filterReducer.js","reducers/index.js","index.js"],"names":["module","exports","withRouter","className","to","connect","state","filters","dispatch","setNameFilter","name","type","setPositionFilter","position","setLocationFilter","location","setAvailabilityFilter","availability","resetFilters","props","handleAvailability","e","target","value","placeholder","onChange","id","checked","onClick","Home","this","candidates","afterFiltering","data","filter","candidate","nameMatch","toLowerCase","includes","positionMatch","locationMatch","availabilityMatch","filteredList","candidateList","length","map","key","src","photo","alt","deleteCandidate","Component","AddCandidate","handleChange","setState","handleLoadLocalFile","event","preventDefault","file","files","localImageUrl","window","URL","createObjectURL","handlePosition","handleLocation","handleSubmit","addNewCandidate","Math","random","alert","onSubmit","htmlFor","accept","addCandidate","App","exact","path","component","Boolean","hostname","match","initState","Myimg","examplePhoto","candidatesReducer","action","newCandidates","filtersReducer","allReducers","combineReducers","rootReducer","filterReducer","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5a95811c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mephoto.1275c866.png\";","module.exports = __webpack_public_path__ + \"static/media/person.906ed4b6.png\";","import React from 'react'\r\nimport { Link, NavLink, withRouter } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"nav-wrapper blue darken-2\">\r\n            <div className=\"container\">\r\n                <span className=\"brand-logo left\" ><Link to='/'>Recruitment App</Link></span>\r\n\r\n                <ul className=\"right\">\r\n                    <li><Link to=\"/\">Home</Link></li>\r\n                    <li><NavLink to=\"/new-candidate\">NEW CANDIDATE</NavLink></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default withRouter(Navbar);","import React from 'react'\r\nimport {setNameFilter, setLocationFilter, setPositionFilter, setAvailabilityFilter, resetFilters} from '../actions/Filteractions'\r\nimport {connect} from 'react-redux'\r\n\r\nconst FormItems = (props) => {\r\n    // console.log(props)\r\n    const {setPositionFilter, setAvailabilityFilter, setNameFilter, setLocationFilter} = props;\r\n\r\n    const handleName = (e) => {\r\n        setNameFilter(e.target.value);\r\n    }\r\n    const handleAvailability = (e) => {\r\n        setAvailabilityFilter(e.target.value)\r\n    }\r\n    const handlePosition = (e) => {\r\n        setPositionFilter(e.target.value);\r\n    }\r\n    const handleLocation = (e) => {\r\n        setLocationFilter(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"left-menu\">\r\n            <h4 className=\"title\">Filter</h4>\r\n\r\n            <input \r\n                placeholder=\"Search Candidate..\" \r\n                className=\"search-bar\" \r\n                type=\"text\"\r\n                onChange={handleName}\r\n             />\r\n\r\n            <label>\r\n                position\r\n                <select \r\n                    className=\"browser-default\"\r\n                    onChange={handlePosition}\r\n                    value={props.filters.position}\r\n                    >\r\n                        <option value=\"all\">All</option>\r\n                        <option value=\"Engineer\">Engineer</option>\r\n                        <option value=\"Designer\">Designer</option>\r\n                        <option value=\"Developer\">Developer</option>\r\n                </select>\r\n            </label>\r\n            <label>\r\n                location\r\n                <select \r\n                    className=\"browser-default\"\r\n                    onChange={handleLocation}\r\n                    value={props.filters.location}\r\n                    >\r\n                        <option value=\"all\">All</option>\r\n                        <option value=\"Dubai\">Dubai</option>\r\n                        <option value=\"Sharjah\">Sharjah</option>\r\n                        <option value=\"Abu Dhabi\">Abu Dhabi</option>\r\n                </select>\r\n            </label>\r\n            <label>availability</label>\r\n            <div>\r\n                <label>\r\n                    <input\r\n                        type=\"radio\" \r\n                        id=\"availability\"\r\n                        value=\"all\"\r\n                        checked={props.filters.availability === 'all'}\r\n                        onChange={handleAvailability}\r\n                    />\r\n                    <span>all</span>\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    <input\r\n                        type=\"radio\" \r\n                        id=\"availability\"\r\n                        value=\"immediately\"\r\n                        checked={props.filters.availability === 'immediately'}\r\n                        onChange={handleAvailability}\r\n                    />\r\n                    <span>immediately</span>\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    <input\r\n                        type=\"radio\" \r\n                        id=\"availability\"\r\n                        value=\"1 week\"\r\n                        checked={props.filters.availability === '1 week'}\r\n                        onChange={handleAvailability}\r\n                    />\r\n                    <span>1 week</span>\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    <input\r\n                        type=\"radio\" \r\n                        id=\"availability\"\r\n                        value=\"2 week\"\r\n                        checked={props.filters.availability === '2 week'}\r\n                        onChange={handleAvailability}\r\n                    />\r\n                    <span>2 week</span>\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    <input\r\n                        type=\"radio\" \r\n                        id=\"availability\"\r\n                        value=\"1 month\"\r\n                        checked={props.filters.availability === '1 month'}\r\n                        onChange={handleAvailability}\r\n                    />\r\n                    <span>1 month</span>\r\n                </label>\r\n            </div>\r\n            <br />\r\n            <button className=\"waves-effect waves-light btn blue\" onClick={() => props.resetFilters()}>Clear Filters</button>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setNameFilter: (name) => (\r\n            dispatch(setNameFilter(name))\r\n        ),\r\n        setPositionFilter: (position) => (\r\n            dispatch(setPositionFilter(position))\r\n        ),\r\n        setLocationFilter: (location) => (\r\n            dispatch(setLocationFilter(location))\r\n        ),\r\n        setAvailabilityFilter: (availability) => (\r\n            dispatch(setAvailabilityFilter(availability))\r\n        ),\r\n        resetFilters: () => {\r\n            dispatch(resetFilters())\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        filters: state.filters\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormItems);","export const setNameFilter = (name) => {\r\n    return {\r\n        type: 'NAME',\r\n        name\r\n    }\r\n}\r\nexport const setPositionFilter = (position) => {\r\n    return {\r\n        type: 'POSITION',\r\n        position\r\n    }\r\n}\r\nexport const setLocationFilter = (location) => {\r\n    return {\r\n        type: 'LOCATION',\r\n        location\r\n    }\r\n}\r\nexport const setAvailabilityFilter = (availability) => {\r\n    return {\r\n        type: 'AVAILABILITY',\r\n        availability\r\n    }\r\n}\r\nexport const resetFilters = () => {\r\n    return {\r\n        type: 'RESET'\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport FormItems from './FormItems';\r\nimport {deleteCandidate} from '../actions/Candidateactions'\r\n\r\nclass Home extends Component {\r\n\r\n   \r\n    render(){\r\n        const { candidates, filters } = this.props;  //state passed through props\r\n        \r\n        const {name, position, location, availability} = filters;\r\n\r\n        const filteredList = (data, name, position, location, availability) => {\r\n            return data.filter(candidate => {\r\n                const nameMatch = candidate.name.toLowerCase().includes(name.toLowerCase()) || name === '';\r\n                const positionMatch = candidate.position === position || position === 'all';\r\n                const locationMatch = candidate.location === location || location === 'all';\r\n                const availabilityMatch = candidate.availability === availability || availability === 'all';\r\n\r\n                return nameMatch && positionMatch && locationMatch && availabilityMatch;\r\n            })\r\n        }\r\n        let afterFiltering = filteredList(candidates, name, position, location, availability);\r\n\r\n\r\n        const candidateList = afterFiltering.length ? (\r\n            afterFiltering.map(candidate => (\r\n                <div className=\"card horizontal\" key={candidate.id} >\r\n                    <div className=\"card-image valign-wrapper\">\r\n                        <img src={candidate.photo} alt=\"candidate\" />\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                            <h4>Name: {candidate.name}</h4>\r\n                            <h6>Position: {candidate.position}</h6>\r\n                            <h6>Location: {candidate.location}</h6>\r\n                            <h6>Availability: {candidate.availability}</h6>\r\n                    </div>\r\n                        <span className=\"delete-button\">\r\n                            <button className=\"btn waves-effect waves-light red\" onClick={() => this.props.deleteCandidate(candidate.id)}>delete</button>\r\n                        </span>\r\n                </div>\r\n                ))\r\n        ):  (\r\n                <p>There is no candidate left.</p>\r\n            );\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"content-wrapper\">\r\n                    <div className=\"filters-container\">\r\n                        <FormItems />\r\n                    </div>\r\n                    <div className=\"candidates-container\">\r\n                        <h4 className=\"center\">Candidates</h4>\r\n                        {candidateList}     \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        candidates: state.candidates.candidates,\r\n        filters: state.filters\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteCandidate: (id) => dispatch(deleteCandidate(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","export const deleteCandidate = (id) => {\r\n    return {\r\n        type: 'DELETE_CANDIDATE',\r\n        id\r\n    }\r\n}\r\n\r\nexport const addCandidate = (id, name, position, location, availability, photo) => {\r\n    return {\r\n        type: 'ADD_CANDIDATE',\r\n        id,\r\n        name,\r\n        position,\r\n        location,\r\n        availability,\r\n        photo\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { addCandidate } from '../actions/Candidateactions'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nclass AddCandidate extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        position: 'Engineer',\r\n        location: 'Dubai',\r\n        availability: '',\r\n        photo: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleLoadLocalFile = (event) => {\r\n        event.preventDefault();\r\n        const file = event.target.files[0];\r\n        const localImageUrl = window.URL.createObjectURL(file);\r\n        // this.props.onFileLoaded(localImageUrl);\r\n        this.setState({\r\n            photo: localImageUrl\r\n        })\r\n      }\r\n\r\n    handlePosition = (e) => {\r\n        this.setState({\r\n            position: e.target.value\r\n        })\r\n    }\r\n\r\n    handleLocation = (e) => {\r\n        this.setState({\r\n            location: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let {name, position, location, availability, photo} = this.state;\r\n        if(name === '' || availability==='' || photo === ''){\r\n            alert('please fill all inputs..')\r\n            return;\r\n        }\r\n        this.props.addNewCandidate(\r\n            Math.random(),\r\n            name,\r\n            position,\r\n            location,\r\n            availability,\r\n            photo\r\n        );\r\n        this.setState({\r\n            name: '',\r\n            position: '',\r\n            location: '',\r\n            availability: '',\r\n            photo: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit} className=\"container\">\r\n                    <br />\r\n                    {this.state.photo && <img className=\"card-image\" src={this.state.photo} alt=\"candidate\" />}\r\n                    <label htmlFor=\"photo\">Select image to upload  </label>\r\n                    <input\r\n                        id=\"upload-btn\"\r\n                        type=\"file\"\r\n                        accept=\".jpg, .jpeg, .png\"\r\n                        onChange={this.handleLoadLocalFile}\r\n                    />\r\n                    <br />\r\n                    <br />\r\n                    <label htmlFor=\"name\">Name: </label>\r\n                    <input id=\"name\" type=\"text\" onChange={this.handleChange} value={this.state.name} placeholder=\"Name\" />\r\n\r\n                    <label htmlFor=\"position\">position</label>\r\n                    <select \r\n                        className=\"browser-default\"\r\n                        onChange={this.handlePosition}\r\n                        >\r\n                            <option value=\"Engineer\">Engineer</option>\r\n                            <option value=\"Designer\">Designer</option>\r\n                            <option value=\"Developer\">Developer</option>\r\n                    </select>\r\n\r\n                    <label htmlFor=\"location\">location</label>\r\n                    <select \r\n                        className=\"browser-default\"\r\n                        onChange={this.handleLocation}\r\n                        >\r\n                            <option value=\"Dubai\">Dubai</option>\r\n                            <option value=\"Sharjah\">Sharjah</option>\r\n                            <option value=\"Abu Dhabi\">Abu Dhabi</option>\r\n                    </select>\r\n\r\n                    <label htmlFor=\"availability\">availability</label>\r\n                    <div>\r\n                        <label>\r\n                            <input\r\n                                type=\"radio\" \r\n                                id=\"availability\"\r\n                                value=\"immediately\"\r\n                                checked={this.state.availability === 'immediately'}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <span>immediately</span>\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                            <input\r\n                                type=\"radio\" \r\n                                id=\"availability\"\r\n                                value=\"1 week\"\r\n                                checked={this.state.availability === '1 week'}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <span>1 week</span>\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                            <input\r\n                                type=\"radio\" \r\n                                id=\"availability\"\r\n                                value=\"2 week\"\r\n                                checked={this.state.availability === '2 week'}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <span>2 week</span>\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                            <input\r\n                                type=\"radio\" \r\n                                id=\"availability\"\r\n                                value=\"1 month\"\r\n                                checked={this.state.availability === '1 month'}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <span>1 month</span>\r\n                        </label>\r\n                    </div>\r\n                    <br />\r\n                    <button className=\"waves-effect waves-light btn blue\">Add candidate</button>\r\n\r\n\r\n                </form>          \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewCandidate: (id, name, position, location, availability, photo) => (\r\n            dispatch(addCandidate(id, name, position, location, availability, photo))\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddCandidate);","import React from 'react';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home'\nimport AddCandidate from './components/AddCandidate'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/new-candidate\" component={AddCandidate} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import Myimg from '../media/mephoto.png'\r\nimport examplePhoto from '../media/person.png'\r\n\r\nconst initState = {\r\n    candidates: [\r\n        {id: '11', name: 'Mucahit Alper Kasli', position: 'Engineer', location: 'Dubai', availability: 'immediately', photo: Myimg},\r\n        {id: '22', name: 'David Gate', position: 'Developer', location: 'Sharjah', availability: '1 week', photo: examplePhoto}\r\n    ]\r\n}\r\n\r\nconst candidatesReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'ADD_CANDIDATE':\r\n            return {\r\n                candidates: [...state.candidates,\r\n                {\r\n                    id: action.id,\r\n                    name: action.name,\r\n                    position: action.position,\r\n                    location: action.location,\r\n                    availability: action.availability,\r\n                    photo: action.photo\r\n                }]\r\n            }\r\n        case 'DELETE_CANDIDATE':\r\n            let newCandidates = state.candidates.filter(candidate => {\r\n                return candidate.id !== action.id\r\n            });\r\n            return {\r\n                ...state,\r\n                candidates: newCandidates\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default candidatesReducer;","const initState = {\r\n    name: '',\r\n    position: 'all',\r\n    location: 'all',\r\n    availability: 'all'\r\n}\r\n\r\nconst filtersReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'NAME':\r\n            return {\r\n                ...state,\r\n                name: action.name\r\n            };\r\n        case 'POSITION':\r\n            return {\r\n                ...state,\r\n                position: action.position\r\n            };\r\n        case 'LOCATION':\r\n            return {\r\n                ...state,\r\n                location: action.location\r\n            };\r\n        case 'AVAILABILITY':\r\n            return {\r\n                ...state,\r\n                availability: action.availability\r\n            };\r\n        case 'RESET':\r\n            return {\r\n                ...state,\r\n                name: '',\r\n                position: 'all',\r\n                location: 'all',\r\n                availability: 'all'\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default filtersReducer;","import rootReducer from './candidatesReducer'\r\nimport filterReducer from './filterReducer'\r\nimport {combineReducers} from 'redux'\r\n\r\nconst allReducers = combineReducers({\r\n    candidates: rootReducer,\r\n    filters: filterReducer\r\n});\r\n\r\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'\nimport {Provider} from 'react-redux'\nimport allReducers from './reducers'\n\nconst store = createStore(allReducers);\n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}